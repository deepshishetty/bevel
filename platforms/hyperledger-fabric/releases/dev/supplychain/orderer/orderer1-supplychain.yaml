apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  interval: 1m
  releaseName: supplychain-orderer1
  chart:
    spec:
      interval: 1m
      sourceRef:
        kind: GitRepository
        name: flux-local
        namespace: flux-local
      chart: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:1.4.8
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://20.214.139.200:8200
      role: vault-role
      authpath: localsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: upgrade.upgrade.com

    genesis: |-
      CiIaIOtbzbFRJf9InE5M66r90tkL7X3N9jlPHn27S1A7C2MYEp5eCpteCpheCngKWggBEAEaBgia
      laudBiIKc3lzY2hhbm5lbCpAY2FlMDE1MTc3MzlkNjIxNjVhNTk0OWU4ZTdkMjdmOTkxMTJjNWU3
      ZDZiMTFmNzQ0MTFjMjhkZGJiZThlZjJlYRIaEhi5V2HTWigc7B0SwGBmQ+pQSjPPinwV55ASm10K
      mF0SlV0SuS8KC0NvbnNvcnRpdW1zEqkvEt4uChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0SxC4SsRcK
      D21hbnVmYWN0dXJlck1TUBKdFxqlFQoDTVNQEp0VEpIVEo8VCg9tYW51ZmFjdHVyZXJNU1ASgQYt
      LS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ0N6Q0NBYktnQXdJQkFnSVVRU0hXUW43d3dn
      YUx4VGU4bmtDUnJvRTdkWUl3Q2dZSUtvWkl6ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6
      QU5CZ05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RB
      eE5ZVzUxWm1GamRIVnlaWEl4SERBYUJnTlZCQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpY
      UXdIaGNOTWpJeE1qSTNNVEF5TWpFNVdoY05NalV4TURFMk1UQXlNakU1V2pCa01Rc3dDUVlEVlFR
      RwpFd0pEU0RFUE1BMEdBMVVFQ0F3R1duVnlhV05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RlRB
      VEJnTlZCQW9NCkRFMWhiblZtWVdOMGRYSmxjakVjTUJvR0ExVUVBd3dUWTJFdWJXRnVkV1poWTNS
      MWNtVnlMVzVsZERCWk1CTUcKQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOVzhuR1g2UW9k
      TExHd3Y2VFlpWVFHVHp3SGJZbWplZHEycwppQnZ4UndEUVFwdWhMR1h4clZDSVoybHJpMFlRVFd2
      N205amlnZHNCWUdwckZhaURhbHVqUWpCQU1BOEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIw
      UEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCUkZRVmlHbEwyN1F0OWEKRVdaaFMxUVVkL1l0WXpB
      S0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCcmxTeTNLY254ZHJuRHBMcDhPQlpjOVh6aQpvcEhwczFW
      VXROL0dqOExQRndJZ0Nndk5hWWVDRWNQbDNGeHM2WXdYdjE4MlA5MnNZd3R4aEdCK3h1R2d3Um89
      Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIuMILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
      Ck1JSURFVENDQXJlZ0F3SUJBZ0lVUVRXWkRqcGZZZFFjTlZhN3dNRnJoU2dpb3VZd0NnWUlLb1pJ
      emowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBH
      QTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05W
      QkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXhNakkzTVRBeU9EQXdXaGNO
      TWpNeE1qSTNNVEF6TXpBd1dqQ0JoakVMTUFrR0ExVUUKQmhNQ1EwZ3hHakFZQmdOVkJBY1RFVFEz
      TGpNNEx6Z3VOVFF2V25WeWFXTm9NUlV3RXdZRFZRUUtFd3hOWVc1MQpabUZqZEhWeVpYSXhJekFN
      QmdOVkJBc1RCV0ZrYldsdU1CTUdBMVVFQ3hNTWJXRnVkV1poWTNSMWNtVnlNUjh3CkhRWURWUVFE
      REJaQlpHMXBia0J0WVc1MVptRmpkSFZ5WlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkkK
      emowREFRY0RRZ0FFbnEwWGNZd3ZtaWpnb1JjY3phNzB5TUdZNk9MN3V2TzhlN1ZCVUNUTm1rVkZ0
      RzFYakRTVwpxS3JSVEw0b2RXTFRuUHNFYzMvMS9ZNGt5ZjRxU2ZJcGhLT0NBU0l3Z2dFZU1BNEdB
      MVVkRHdFQi93UUVBd0lICmdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRSkpubXdN
      bWdyWGVQNWR1bTVCdXREWnptMFVqQWYKQmdOVkhTTUVHREFXZ0JSRlFWaUdsTDI3UXQ5YUVXWmhT
      MVFVZC9ZdFl6QWtCZ05WSFJFRUhUQWJnaGxqWVMxMApiMjlzY3kwNE5tSmtPVFJqT1RZMkxXdHVi
      bkV5TUlHWEJnZ3FBd1FGQmdjSUFRU0JpbnNpWVhSMGNuTWlPbnNpCllXSmhZeTVwYm1sMElqb2lk
      SEoxWlNJc0ltRmtiV2x1SWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXUKSWpvaWJXRnVk
      V1poWTNSMWNtVnlJaXdpYUdZdVJXNXliMnhzYldWdWRFbEVJam9pUVdSdGFXNUFiV0Z1ZFdaaApZ
      M1IxY21WeUxXNWxkQ0lzSW1obUxsUjVjR1VpT2lKaFpHMXBiaUo5ZlRBS0JnZ3Foa2pPUFFRREFn
      TklBREJGCkFpRUExNXg2Mzk2VGNlanFlaWw0UWNRK0tMdHN3SFI1R2tBd2ZFVWRHNWN6RVRjQ0lB
      VFJXUVhsQWI2MnFpTHkKczdIZ0RuengyUTlaRm9SOGRTK0duS0R0L1hENQotLS0tLUVORCBDRVJU
      SUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZKgQYtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0t
      LS0KTUlJQ0N6Q0NBYktnQXdJQkFnSVVRU0hXUW43d3dnYUx4VGU4bmtDUnJvRTdkWUl3Q2dZSUtv
      Wkl6ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WQkFnTUJscDFjbWxqYURFUE1B
      MEdBMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnlaWEl4SERBYUJn
      TlZCQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdIaGNOTWpJeE1qSTNNVEF5TWpFNVdo
      Y05NalV4TURFMk1UQXlNakU1V2pCa01Rc3dDUVlEVlFRRwpFd0pEU0RFUE1BMEdBMVVFQ0F3R1du
      VnlhV05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RlRBVEJnTlZCQW9NCkRFMWhiblZtWVdOMGRY
      SmxjakVjTUJvR0ExVUVBd3dUWTJFdWJXRnVkV1poWTNSMWNtVnlMVzVsZERCWk1CTUcKQnlxR1NN
      NDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOVzhuR1g2UW9kTExHd3Y2VFlpWVFHVHp3SGJZbWplZHEy
      cwppQnZ4UndEUVFwdWhMR1h4clZDSVoybHJpMFlRVFd2N205amlnZHNCWUdwckZhaURhbHVqUWpC
      QU1BOEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdR
      V0JCUkZRVmlHbEwyN1F0OWEKRVdaaFMxUVVkL1l0WXpBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlC
      cmxTeTNLY254ZHJuRHBMcDhPQlpjOVh6aQpvcEhwczFWVXROL0dqOExQRndJZ0Nndk5hWWVDRWNQ
      bDNGeHM2WXdYdjE4MlA5MnNZd3R4aEdCK3h1R2d3Um89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0t
      LS0KGgZBZG1pbnMiOQoGQWRtaW5zEi8SJQgBEiESCBIGCAESAggAGhUSEwoPbWFudWZhY3R1cmVy
      TVNQEAEaBkFkbWlucyI8CgtFbmRvcnNlbWVudBItEiMIARIfEggSBggBEgIIABoTEhEKD21hbnVm
      YWN0dXJlck1TUBoGQWRtaW5zIjgKB1JlYWRlcnMSLRIjCAESHxIIEgYIARICCAAaExIRCg9tYW51
      ZmFjdHVyZXJNU1AaBkFkbWlucyI4CgdXcml0ZXJzEi0SIwgBEh8SCBIGCAESAggAGhMSEQoPbWFu
      dWZhY3R1cmVyTVNQGgZBZG1pbnMqBkFkbWlucxKyFgoKY2Fycmllck1TUBKjFhq/FAoDTVNQErcU
      EqwUEqkUCgpjYXJyaWVyTVNQEukFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrREND
      QVo2Z0F3SUJBZ0lVWjJxbm5mOTJIRWc2ZmxTTGg4VU41a05Bb1FRd0NnWUlLb1pJemowRUF3SXcK
      V2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlh
      V1Z5TFc1bGREQWVGdzB5Ck1qRXlNamN4TURJek16SmFGdzB5TlRFd01UWXhNREl6TXpKYU1Gb3hD
      ekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZi
      bVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxj
      aTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBVFFuR1l2dFBydDhCRVhk
      U2hFSjhRUlFyaGVOaSs2UjVNMGRBbDNwdlFyWlhvUEZ5VW9Zd0JiTWpqa290cVoKUTBVUVlubTYy
      Q2NUdmt6YndNUFZ0OTRmbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgov
      d1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVwd2k4N3F0VGEzNVRKMXUzcjh1QXk5Z1RnQ1V3Q2dZSUtv
      Wkl6ajBFCkF3SURTQUF3UlFJaEFPSytSV2Z0a2F0NnpVN2N5WlVqUDlhU1JlVUJ0bjJDOGVudFdx
      akd5NFJ3QWlCMXZuVGIKQ0x0TkREa3ZWb3h3OHlYSHA0b21ySldwKzBLUnY4S2paU2M5bnc9PQot
      LS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiKyCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN
      SUlDN1RDQ0FwU2dBd0lCQWdJVUJBem10bVRsd0ZJZU16N09SQWpiYkYxdU1ETXdDZ1lJS29aSXpq
      MEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0Ex
      VUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allT
      NWpZWEp5YVdWeUxXNWxkREFlRncweQpNakV5TWpjeE1ETXdNREJhRncweU16RXlNamN4TURNMU1E
      QmFNSGd4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIy
      NWtiMjR4RURBT0JnTlZCQW9UQjBOaGNuSnBaWEl4SGpBTUJnTlYKQkFzVEJXRmtiV2x1TUE0R0Ex
      VUVDeE1IWTJGeWNtbGxjakVhTUJnR0ExVUVBd3dSUVdSdGFXNUFZMkZ5Y21sbApjaTF1WlhRd1dU
      QVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSV3F6cmx2eHdueDZvdHpBNG84em1TCm11
      bFNjZ3RwdmUzbEgxREFvaGxKN0FNOVE0dmRwVHBmK0k5YklRSUtFb3FsYVJ5MnVLczBWUXNETVcw
      NnpuNU4KbzRJQkdEQ0NBUlF3RGdZRFZSMFBBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFB
      d0hRWURWUjBPQkJZRQpGRytQZ01YejZDVUVYSEp4b3RqNzlTVTllOSt5TUI4R0ExVWRJd1FZTUJh
      QUZLY0l2TzZyVTJ0K1V5ZGJ0Ni9MCmdNdllFNEFsTUNRR0ExVWRFUVFkTUJ1Q0dXTmhMWFJ2YjJ4
      ekxUVmtabVJqTkRsa05EZ3RlRGR4Tm1nd2dZMEcKQ0NvREJBVUdCd2dCQklHQWV5SmhkSFJ5Y3lJ
      NmV5SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aQpPaUowY25WbElpd2lhR1l1UVda
      bWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1CmRFbEVJam9pUVdS
      dGFXNUFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaVlXUnRhVzRpZlgwd0NnWUkKS29a
      SXpqMEVBd0lEUndBd1JBSWdZc2ZiNUdyT1hkZGR6bE44Vm8rTC9vRCt6UGwzYURwbnB6eS9EekVn
      TG5VQwpJR21sVWx6cmxSTEZScHpaRUJGMk9EOFhLenBrK1Rtdkdha3M4akZvRklodgotLS0tLUVO
      RCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK6QUtLS0tLUJFR0lOIENFUlRJRklD
      QVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVaMnFubmY5MkhFZzZmbFNMaDhVTjVrTkFvUVF3
      Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2
      YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlE
      VlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTWpFeU1qY3hNREl6TXpKYUZ3MHlOVEV3
      TVRZeE1ESXpNekphTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4
      RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVF
      QXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMK
      QUFUUW5HWXZ0UHJ0OEJFWGRTaEVKOFFSUXJoZU5pKzZSNU0wZEFsM3B2UXJaWG9QRnlVb1l3QmJN
      amprb3RxWgpRMFVRWW5tNjJDY1R2a3pid01QVnQ5NGZvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURB
      UUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVXB3aTg3cXRUYTM1VEoxdTNy
      OHVBeTlnVGdDVXdDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUloQU9LK1JXZnRrYXQ2elU3Y3laVWpQ
      OWFTUmVVQnRuMkM4ZW50V3FqR3k0UndBaUIxdm5UYgpDTHRORERrdlZveHc4eVhIcDRvbXJKV3Ar
      MEtSdjhLalpTYzludz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiMwoHUmVh
      ZGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyIzCgdXcml0ZXJz
      EigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zIjQKBkFkbWlucxIqEiAI
      ARIcEggSBggBEgIIABoQEg4KCmNhcnJpZXJNU1AQARoGQWRtaW5zIjcKC0VuZG9yc2VtZW50EigS
      HggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zKgZBZG1pbnMaQAoVQ2hhbm5l
      bENyZWF0aW9uUG9saWN5EicSDAgDEggKBkFkbWlucxoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMq
      Fy9DaGFubmVsL09yZGVyZXIvQWRtaW5zIi0KBkFkbWlucxIjEggIARIEEgISABoXL0NoYW5uZWwv
      T3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zEpMrCgdPcmRlcmVyEocrEsoW
      Cg5zdXBwbHljaGFpbk1TUBK3FhrDFAoDTVNQErsUErAUEq0UCg5zdXBwbHljaGFpbk1TUBLxBS0t
      LS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDQURDQ0FhYWdBd0lCQWdJVU03R1MydzlHSmVU
      cFNVdHF5ZVY1MHZPUWRvY3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpB
      TkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk
      UGNtUmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJ
      eE1qSTNNVEF5TVRBeldoY05NalV4TURFMk1UQXlNVEF6V2pCZU1Rc3dDUVlEVlFRR0V3SkhRakVQ
      Ck1BMEdBMVVFQ0F3R1RHOXVaRzl1TVE4d0RRWURWUVFIREFaTWIyNWtiMjR4RURBT0JnTlZCQW9N
      QjA5eVpHVnkKWlhJeEd6QVpCZ05WQkFNTUVtTmhMbk4xY0hCc2VXTm9ZV2x1TFc1bGREQlpNQk1H
      QnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRlFTd1gyNGhlbDhrZVdIbVUzU0pCSk00SlVP
      Nm5ueXp4RFZ5bHNwK0R2OFhuY3lINUJuCm13R016T2FwSGhZV1lJcFEwTnhFWm5QNU9rMnMxb3FS
      NHk2alFqQkFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHcKRGdZRFZSMFBBUUgvQkFRREFnR21NQjBH
      QTFVZERnUVdCQlJEbTBaWmZJcnN4ODdmbjBVaFBMcWhpdFZPVnpBSwpCZ2dxaGtqT1BRUURBZ05J
      QURCRkFpQm81ZU95dTR4R0JxRlRFOTF5djExM0VCL0g1d09KOWw1Mkd1YWFmb3J4CnlRSWhBTnpL
      ekVWVzUvOHY1aDJDN01RNExralJjUEs2Y09zN0RNa2pYYzI5TUNhegotLS0tLUVORCBDRVJUSUZJ
      Q0FURS0tLS0tCiKiCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDNFRDQ0FvaWdBd0lC
      QWdJVWI0cis1SzdDSzJ3eVBma1NOWlN1YU93WW9PUXdDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtH
      QTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK
      TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBi
      aTF1WlhRdwpIaGNOTWpJeE1qSTNNVEF5TnpBd1doY05Nak14TWpJM01UQXpNakF3V2pCc01Rc3dD
      UVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05URXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdE
      Z1lEVlFRS0V3ZFBjbVJsY21WeU1RNHcKREFZRFZRUUxFd1ZoWkcxcGJqRWVNQndHQTFVRUF3d1ZR
      V1J0YVc1QWMzVndjR3g1WTJoaGFXNHRibVYwTUZrdwpFd1lIS29aSXpqMENBUVlJS29aSXpqMERB
      UWNEUWdBRVcveU93S0I0OVZCSjlzMFFQNGphU3JKbjlzN1NIRTVBCnJLSXNIU0lnQVdVT2lRakl1
      Y2NmRjh6RlEvcFl5QkZyeDJLZndRd2pqRWtMT09kQkhIR2hIYU9DQVJRd2dnRVEKTUE0R0ExVWRE
      d0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU055eW9QbGtsTgo3
      ajRJUWhZMUNRN3VNODdhQXpBZkJnTlZIU01FR0RBV2dCUkRtMFpaZklyc3g4N2ZuMFVoUExxaGl0
      Vk9WekFrCkJnTlZIUkVFSFRBYmdobGpZUzEwYjI5c2N5MDJZamswT1RrNFkyWm1MWHB3ZW1SeE1J
      R0pCZ2dxQXdRRkJnY0kKQVFSOWV5SmhkSFJ5Y3lJNmV5SmhZbUZqTG1sdWFYUWlPaUowY25WbElp
      d2lZV1J0YVc0aU9pSjBjblZsSWl3aQphR1l1UVdabWFXeHBZWFJwYjI0aU9pSWlMQ0pvWmk1RmJu
      SnZiR3h0Wlc1MFNVUWlPaUpCWkcxcGJrQnpkWEJ3CmJIbGphR0ZwYmkxdVpYUWlMQ0pvWmk1VWVY
      QmxJam9pWVdSdGFXNGlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXcKUkFJZ1RiMG5xOXdoeUs2TUp0
      amhqNWZvQW5jdEtzZmo2S2s5VzQ2dEhDUmxpVWNDSUhMdzJwaFVPTStVQ29vLwpES0NnTnc3bGxH
      ZW5MU1RLL3RmemRYRkNaTlZlCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNI
      QTI1NkrxBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDQURDQ0FhYWdBd0lCQWdJVU03
      R1MydzlHSmVUcFNVdHF5ZVY1MHZPUWRvY3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJo
      TUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn
      WURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhR
      dwpIaGNOTWpJeE1qSTNNVEF5TVRBeldoY05NalV4TURFMk1UQXlNVEF6V2pCZU1Rc3dDUVlEVlFR
      R0V3SkhRakVQCk1BMEdBMVVFQ0F3R1RHOXVaRzl1TVE4d0RRWURWUVFIREFaTWIyNWtiMjR4RURB
      T0JnTlZCQW9NQjA5eVpHVnkKWlhJeEd6QVpCZ05WQkFNTUVtTmhMbk4xY0hCc2VXTm9ZV2x1TFc1
      bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRlFTd1gyNGhlbDhrZVdIbVUz
      U0pCSk00SlVPNm5ueXp4RFZ5bHNwK0R2OFhuY3lINUJuCm13R016T2FwSGhZV1lJcFEwTnhFWm5Q
      NU9rMnMxb3FSNHk2alFqQkFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHcKRGdZRFZSMFBBUUgvQkFR
      REFnR21NQjBHQTFVZERnUVdCQlJEbTBaWmZJcnN4ODdmbjBVaFBMcWhpdFZPVnpBSwpCZ2dxaGtq
      T1BRUURBZ05JQURCRkFpQm81ZU95dTR4R0JxRlRFOTF5djExM0VCL0g1d09KOWw1Mkd1YWFmb3J4
      CnlRSWhBTnpLekVWVzUvOHY1aDJDN01RNExralJjUEs2Y09zN0RNa2pYYzI5TUNhegotLS0tLUVO
      RCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjgKBkFkbWlucxIuEiQIARIgEggSBggBEgIIABoU
      EhIKDnN1cHBseWNoYWluTVNQEAEaBkFkbWlucyI7CgtFbmRvcnNlbWVudBIsEiIIARIeEggSBggB
      EgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMiNwoHUmVhZGVycxIsEiIIARIeEggSBggB
      EgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMiNwoHV3JpdGVycxIsEiIIARIeEggSBggB
      EgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMqBkFkbWlucxoiCglCYXRjaFNpemUSFRIL
      CAoQgICAMRiAgEAaBkFkbWlucxoeCgxCYXRjaFRpbWVvdXQSDhIECgIycxoGQWRtaW5zGh8KE0No
      YW5uZWxSZXN0cmljdGlvbnMSCBoGQWRtaW5zGiYKDENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8y
      EgAaBkFkbWlucxqKEgoNQ29uc2Vuc3VzVHlwZRL4ERLtEQoIZXRjZHJhZnQS4BEKyREKGG9yZGVy
      ZXIxLnN1cHBseWNoYWluLW5ldBCKNxrTCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlE
      QkRDQ0FxdWdBd0lCQWdJVUs0RlVKL0twQzE1RzJDbzVJc1VzN2VhR3d1UXdDZ1lJS29aSXpqMEVB
      d0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVC
      d3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpk
      WEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJeE1qSTNNVEF5TnpBd1doY05Nak14TWpJM01UQXpN
      akF3V2pCeE1Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05URXVOVEF2TFRBdU1UTXZU
      Rzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1SQXcKRGdZRFZRUUxFd2R2Y21SbGNtVnlN
      U0V3SHdZRFZRUURFeGh2Y21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdQpaWFF3V1RBVEJnY3Fo
      a2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVR2T0tNUlJFQ0JZcWdEVGFNQVQ5bWRLWDBMCkFYbkFK
      ZG9Ca2lkbnVMTFFVcVdPM1pHUFNPL3BWU25VWUhydWpIeGgxMkEveVRrcG4zUzlMQmJVbkVSU280
      SUIKTWpDQ0FTNHdEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3
      TUJCZ2dyQmdFRgpCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlErTExLd0s0
      cWJpNzZoL2xTZ244VDlEY1VDCjBEQWZCZ05WSFNNRUdEQVdnQlJEbTBaWmZJcnN4ODdmbjBVaFBM
      cWhpdFZPVnpCQkJnTlZIUkVFT2pBNGdoaHYKY21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpY
      U0NIRzl5WkdWeVpYSXhMblZ3WjNKaFpHVXVkWEJuY21GawpaUzVqYjIwd2JBWUlLZ01FQlFZSENB
      RUVZSHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJH
      eHRaVzUwU1VRaU9pSnZjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1WlhRaUxDSm8KWmk1VWVY
      QmxJam9pYjNKa1pYSmxjaUo5ZlRBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCYWpEdnRvNWlHUnIx
      bQpiRzdVdkJGcUdSUWJVZy83TWo1bXBrR2NXbCtaNUFJZ2NqNEtWL2dST3RkSlIxYzV1TmQvRHlu
      UGJvaFRCemJvCjlHajRSbTlycTFFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLTCC0tLS0t
      QkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQkRDQ0FxdWdBd0lCQWdJVUs0RlVKL0twQzE1RzJD
      bzVJc1VzN2VhR3d1UXdDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJn
      TlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNt
      UmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJeE1q
      STNNVEF5TnpBd1doY05Nak14TWpJM01UQXpNakF3V2pCeE1Rc3dDUVlEVlFRR0V3SkhRakViCk1C
      a0dBMVVFQnhNU05URXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21W
      eU1SQXcKRGdZRFZRUUxFd2R2Y21SbGNtVnlNU0V3SHdZRFZRUURFeGh2Y21SbGNtVnlNUzV6ZFhC
      d2JIbGphR0ZwYmkxdQpaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVR2T0tN
      UlJFQ0JZcWdEVGFNQVQ5bWRLWDBMCkFYbkFKZG9Ca2lkbnVMTFFVcVdPM1pHUFNPL3BWU25VWUhy
      dWpIeGgxMkEveVRrcG4zUzlMQmJVbkVSU280SUIKTWpDQ0FTNHdEZ1lEVlIwUEFRSC9CQVFEQWdP
      b01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRgpCUWNEQWpBTUJnTlZIUk1CQWY4
      RUFqQUFNQjBHQTFVZERnUVdCQlErTExLd0s0cWJpNzZoL2xTZ244VDlEY1VDCjBEQWZCZ05WSFNN
      RUdEQVdnQlJEbTBaWmZJcnN4ODdmbjBVaFBMcWhpdFZPVnpCQkJnTlZIUkVFT2pBNGdoaHYKY21S
      bGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpYU0NIRzl5WkdWeVpYSXhMblZ3WjNKaFpHVXVkWEJu
      Y21GawpaUzVqYjIwd2JBWUlLZ01FQlFZSENBRUVZSHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hw
      WVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1TNXpkWEJ3
      YkhsamFHRnBiaTF1WlhRaUxDSm8KWmk1VWVYQmxJam9pYjNKa1pYSmxjaUo5ZlRBS0JnZ3Foa2pP
      UFFRREFnTkhBREJFQWlCYWpEdnRvNWlHUnIxbQpiRzdVdkJGcUdSUWJVZy83TWo1bXBrR2NXbCta
      NUFJZ2NqNEtWL2dST3RkSlIxYzV1TmQvRHluUGJvaFRCemJvCjlHajRSbTlycTFFPQotLS0tLUVO
      RCBDRVJUSUZJQ0FURS0tLS0tChISCgU1MDBtcxAKGAEgBSiAgIAKGgZBZG1pbnMiKgoPQmxvY2tW
      YWxpZGF0aW9uEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1Jl
      YWRlcnMaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgZBZG1p
      bnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyoGQWRtaW5zGk4KEE9yZGVyZXJBZGRyZXNzZXMS
      OhIfCh1vcmRlcmVyMS5zdXBwbHljaGFpbi1uZXQ6NzA1MBoXL0NoYW5uZWwvT3JkZXJlci9BZG1p
      bnMaJgoMQ2FwYWJpbGl0aWVzEhYSDAoKCgZWMV80XzMSABoGQWRtaW5zGiYKEEhhc2hpbmdBbGdv
      cml0aG0SEhIICgZTSEEyNTYaBkFkbWlucxotChlCbG9ja0RhdGFIYXNoaW5nU3RydWN0dXJlEhAS
      Bgj/////DxoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIiIKB1Jl
      YWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVy
      cxoGQWRtaW5zKgZBZG1pbnMaCgoACgAKAAoACgA=

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
